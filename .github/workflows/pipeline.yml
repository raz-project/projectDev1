name: Project nodejs CI/CD Pipeline
on: [push]
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check Docker version
        run: docker --version

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and tag Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/nodejs-app:1.0 .

      - name: Run Docker container
        run: |
          docker run -d -p 8080:80 --name test-app ${{ secrets.DOCKER_USERNAME }}/nodejs-app:1.0 .
          sleep 5
          docker ps -a

      - name: Push Docker image to DockerHub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/nodejs-app:1.0

      - name: Stop and remove container and volume
        run: |
          docker stop ${{ secrets.DOCKER_USERNAME }}/nodejs-app:1.0 || true
          docker rm ${{ secrets.DOCKER_USERNAME }}/nodejs-app:1.0 || true
          docker volume prune -f

      - name: Run Docker Compose services
        run: |
          docker compose up -d --build
          sleep 10
          docker compose ps

      - name: Test served HTML page
        run: |
          RESPONSE=$(curl -s http://localhost:8080)
          echo "$RESPONSE"
          if [[ "$RESPONSE" != *"<html"* ]]; then
            echo "HTML content not found in response!"
            exit 1
          fi

      - name: Stop and remove Docker Compose containers and volumes
        run: |
          docker compose down -v
          docker volume prune -f

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "latest"

      - name: Configure KUBECONFIG for K3s
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG_DATA }}" > ~/.kube/config
          chmod 600 ~/.kube/config
          kubectl config get-contexts

      - name: Apply complex-hpa.yaml to K3s
        run: kubectl apply -f complex-hpa.yaml

      - name: Wait for pods to be ready
        run: |
          echo "Waiting for pods to become ready..."
          kubectl wait --for=condition=ready pod -l app=project-node-app --timeout=120s

      - name: Test Node.js app by curling index.html
        run: |
          NODE_PORT=$(kubectl get svc project-node-app-service -o jsonpath="{.spec.ports[0].nodePort}")
          NODE_IP=$(kubectl get nodes -o jsonpath="{.items[0].status.addresses[0].address}")
          echo "Testing http://$NODE_IP:$NODE_PORT"
          for i in {1..10}; do
            if curl -s http://$NODE_IP:$NODE_PORT | grep "<html"; then
              echo "Index.html served correctly"
              break
            else
              echo "Waiting for app to respond..."
              sleep 5
            fi
          done

      - name: Show pod status
        run: kubectl get pods -o wide

      - name: Cleanup Kubernetes resources
        run: |
          kubectl delete -f complex-hpa.yaml
          kubectl delete svc project-node-app-service || true
          kubectl delete deployment project-node-app || true
          kubectl delete hpa project-node-app || true
